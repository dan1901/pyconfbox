name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish (all, pyconfbox, pyconfbox-django, pyconfbox-mysql, pyconfbox-postgresql, pyconfbox-mongodb)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - pyconfbox
          - pyconfbox-django
          - pyconfbox-mysql
          - pyconfbox-postgresql
          - pyconfbox-mongodb

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      pyconfbox: ${{ steps.changes.outputs.pyconfbox }}
      pyconfbox-django: ${{ steps.changes.outputs.pyconfbox-django }}
      pyconfbox-mysql: ${{ steps.changes.outputs.pyconfbox-mysql }}
      pyconfbox-postgresql: ${{ steps.changes.outputs.pyconfbox-postgresql }}
      pyconfbox-mongodb: ${{ steps.changes.outputs.pyconfbox-mongodb }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            pyconfbox:
              - 'packages/pyconfbox/**'
            pyconfbox-django:
              - 'packages/pyconfbox-django/**'
            pyconfbox-mysql:
              - 'packages/pyconfbox-mysql/**'
            pyconfbox-postgresql:
              - 'packages/pyconfbox-postgresql/**'
            pyconfbox-mongodb:
              - 'packages/pyconfbox-mongodb/**'

  build-and-publish:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: pypi
    strategy:
      matrix:
        package: [pyconfbox, pyconfbox-django, pyconfbox-mysql, pyconfbox-postgresql, pyconfbox-mongodb]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Check if package should be built
        id: should-build
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.package }}" == "all" || "${{ github.event.inputs.package }}" == "${{ matrix.package }}" ]]; then
              echo "build=true" >> $GITHUB_OUTPUT
            else
              echo "build=false" >> $GITHUB_OUTPUT
            fi
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.detect-changes.outputs[matrix.package] }}" == "true" ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "build=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build package
        if: steps.should-build.outputs.build == 'true'
        run: |
          uv build packages/${{ matrix.package }}
      
      - name: Check distribution
        if: steps.should-build.outputs.build == 'true'
        run: |
          uv tool run twine check packages/${{ matrix.package }}/dist/*
      
      - name: Publish to PyPI
        if: steps.should-build.outputs.build == 'true'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv tool run twine upload packages/${{ matrix.package }}/dist/* --skip-existing 